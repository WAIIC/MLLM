import cv2
import numpy as np
import json
import base64

def extract_ordered_line_coordinates(image_base64, output_json_path, num_points=50):
    # 将Base64字符串解码为二进制数据
    image_data = base64.b64decode(image_base64)

    # 将二进制数据转换为NumPy数组
    image_array = np.frombuffer(image_data, dtype=np.uint8)

    # 使用cv2.imdecode将NumPy数组解码为图像
    image = cv2.imdecode(image_array, cv2.IMREAD_UNCHANGED)
    if image is None:
        raise ValueError("无法解码图像，请检查Base64字符串是否正确！")

    # 分离透明通道
    if image.shape[2] != 4:
        raise ValueError("图像不包含透明通道！")
    alpha_channel = image[:, :, 3]

    # 将透明通道转换为二值图像
    _, binary = cv2.threshold(alpha_channel, 1, 255, cv2.THRESH_BINARY)

    # 查找轮廓
    contours, _ = cv2.findContours(binary, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_NONE)

    # 假设最长的轮廓是目标线条
    if len(contours) == 0:
        raise ValueError("未检测到任何轮廓！")
    max_contour = max(contours, key=cv2.contourArea)

    # 提取轮廓上的点
    points = max_contour.reshape(-1, 2)

    # 找到起点和终点（在图像边界上的点）
    def is_on_edge(point, width, height):
        return point[0] == 0 or point[0] == width - 1 or point[1] == 0 or point[1] == height - 1

    height, width = binary.shape

    # 找到所有在边界上的点
    edge_points = [point for point in points if is_on_edge(point, width, height)]

    if len(edge_points) < 2:
        raise ValueError("未找到足够的边界点！")

    # 假设第一个和最后一个边界点是起点和终点
    start_point = edge_points[0]
    end_point = edge_points[-1]

    # 沿轮廓等距采样
    def interpolate_points(points, num_points):
        distances = np.sqrt(np.sum(np.diff(points, axis=0)**2, axis=1))
        cumulative_distances = np.cumsum(distances)
        total_distance = cumulative_distances[-1]
        target_distances = np.linspace(0, total_distance, num_points)
        interpolated_points = []
        for target_distance in target_distances:
            if target_distance == 0:
                interpolated_points.append(points[0])
            else:
                idx = np.searchsorted(cumulative_distances, target_distance)
                if idx == 0:
                    interpolated_points.append(points[0])
                else:
                    prev_point = points[idx - 1]
                    next_point = points[idx]
                    prev_distance = cumulative_distances[idx - 1]
                    fraction = (target_distance - prev_distance) / distances[idx - 1]
                    interpolated_point = prev_point + fraction * (next_point - prev_point)
                    interpolated_points.append(interpolated_point)
        return np.array(interpolated_points)

    ordered_points = interpolate_points(points, num_points)

    # 创建JSON输出
    output = {
        "seam_path": [{"x": int(point[0]), "y": int(point[1])} for point in ordered_points],
        "start_point": {"x": int(start_point[0]), "y": int(start_point[1])},
        "end_point": {"x": int(end_point[0]), "y": int(end_point[1])},
        "image_dimensions": {"width": width, "height": height},
        "points_count": num_points
    }

    # 保存为JSON文件
    with open(output_json_path, 'w') as f:
        json.dump(output, f, indent=4)

    print(f"坐标已保存到 {output_json_path}")

# 示例用法
image_base64 = ""  # 替换为你的Base64字符串
output_json_path = "cracks/line_coordinates.json"  # 输出的JSON文件路径
extract_ordered_line_coordinates(image_base64, output_json_path)